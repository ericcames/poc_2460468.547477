---
# Ansible Playbook to upgrade Cisco IOS

- name: Upgrade CISCO IOS
  hosts: cisco

  vars:
    upgrade_ios_version: 17.06.05

  tasks:
    # fail with good error for Automation controller user
    - name: Determine that both AAP and Machine credentials are set
      ansible.builtin.assert:
        that:
          - "lookup('env', 'CONTROLLER_USERNAME') !=''"
        fail_msg:
          - "This Job requires two credentials"
          - "Red Hat Ansible Automation Platform credential is not set"
          - "Please assign correct credentials to the Job Template"

    - name: Determine that both AAP and Machine credentials are set
      ansible.builtin.debug:
        msg:
          - "{{ lookup('env', 'CONTROLLER_USERNAME') }}"
          #- "{{ lookup('env', 'CONTROLLER_PASSWORD') }}"
          - "{{ lookup('env', 'CONTROLLER_HOST') }}"

    - name: CHECK CURRENT VERSION
      cisco.ios.ios_facts:

    - debug:
        msg:
        - "Current version is {{ ansible_net_version }}"  #17.03.04
        - "Upgrade image is {{ upgrade_ios_version }}"    #17.06.05

    - debug:
        msg:
        - "Image is not compliant and will be upgraded"

      when: ansible_net_version != upgrade_ios_version

    - debug:
        msg:
        - "Device is already at desired firmware version!"

      when: ansible_net_version = upgrade_ios_version

## Copy software to target device

    # - name: Copy Image // This could take up to 4 minutes
    #   ansible.netcommon.net_put:
    #     src: scp://cisco_software.bin
    #     protocol: scp
    #     dest : flash3:/cisco_software.bin
    #   vars:
    #     ansible_command_timeout: 600

## Change the Boot Variable to the new image

    - name: Change Boot Variable to new image
      cisco.ios.ios_config:
        lines: #commands:
          - "boot system flash:c2960-lanbasek9-mz.122-55.SE12.bin"
        save_when: always

## Reload the device

    - name: Reload the Device
      ansible.netcommon.cli_command:
        command: reload
        prompt:
          - confirm
        answer:
          - 'y'

## Wait for Reachability to the device

    - name: Wait for device to come back online
      ansible.builtin.wait_for:
        host: "{{ inventory_hostname }}"
        port: 22
        delay: 90
      delegate_to: localhost

## Check current image

    - name: Check Image Version
      cisco.ios.ios_facts:

    - debug:
        msg:
        - "Current version is {{ ansible_net_version }}"

    - name: ASSERT THAT THE IOS VERSION IS CORRECT

      vars:
        upgrade_ios_version: 17.06.05

      assert:
        that:
          - upgrade_ios_version == ansible_net_version
    - debug:
        msg:
        - "Software Upgrade has been completed"
...
# cat9k_iosxe.17.06.05.SPA.bin
# cat9k_iosxe.17.03.04.SPA.bin